#!/bin/bash -e

if [ $UID != "0" ]
then
   echo "You must be root to use ${0}." >&2
   exit 1
fi

usage()
{
	echo "Usage: ${0} <SLOT> <PATH>" >&2
        echo "       ${0} [-u|--undo] [SLOT] <PATH>" >&2
        echo "       ${0} [-h|--help]" >&2
        exit 1
}

slotown()
{
	local cuid="$(stat -c %u "${1}")"
	local cgid="$(stat -c %g "${1}")"
	if [ "${UNDO}" -eq 1 ]; then
		local nuid="$(( ${cuid} - ${USLOT} ))"
		local ngid="$(( ${cgid} - ${USLOT} ))"
	else
		local nuid="$(( ${cuid} + ${USLOT} ))"
		local ngid="$(( ${cgid} + ${USLOT} ))"
	fi
	chown -h ${nuid}.${ngid} "${1}"
}

if [ $# -gt 3 ] || [ $# -lt 2 ] || [ "${1}" == '-h' ] || [ "${1}" == '--help' ]; then
        usage "${0}"
fi

if [ $# -eq 2 ]; then
	USLOT="${1}"
	UPATH="${2}"
	if [ "${1}" == '-u' ] || [ "${1}" == '--undo' ]; then
		UNDO=1
		USLOT=""
	else
		UNDO=0
	fi
elif [ $# -eq 3 ]; then
	UNDO=1
	USLOT="${2}"
	UPATH="${3}"
	if [ "${1}" != '-u' ] && [ "${1}" != '--undo' ]; then
		usage "${0}"
	fi
fi

if ! [ -d "${UPATH}" ]; then
	echo "PATH is not a directory." >&2
	usage "${0}"
fi

if [ ${UNDO} -eq 1 ] && [ "${USLOT}" = "" ]; then
	USLOT="$(stat -c %u "${UPATH}/root")"
fi

if [ "${USLOT}" -lt 0 ] 2>/dev/null || \
   [ "${USLOT}" -gt 65536 ] 2>/dev/null || \
   ! [ "${USLOT}" -eq "${USLOT}" ] 2>/dev/null; then
	echo "SLOT must be an integer between 0 and 65536." >&2
	usage "${0}"
fi

USLOT=$((${USLOT}*65535))

if [ ${UNDO} -eq 1 ] && [ -d "${UPATH}/root" ]; then
	tmp="$(( $(stat -c %u "${UPATH}/root")-${USLOT} ))"
	if [ ${tmp} -ne 0 ]; then
		echo "Provided SLOT does not match root UID." >&2
		usage 0
	fi
elif [ ${UNDO} -eq 0 ]; then
	tmp="$(stat -c %u "${UPATH}/root")"
	if [ ${tmp} -ne 0 ]; then
		echo "/root is not UID 0, did you forget to undo a previous chown?" >&2
		usage 0
	fi
fi

export -f slotown
export UNDO
export USLOT
find -H "${UPATH}" -exec bash -c 'slotown "${0}"' {} \;

exit 0
